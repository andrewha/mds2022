-- Load Hotel DB into RelaX calculator.
-- Find guests (id, name, email) who each time stayed the same number of nights or longer, than previously.
-- Consider only guests who stayed in the hotel at least twice.

-- Solution 1: join Guest and Stay, then apply conditions
-- 1. Natural join of Guest with Stay by gid
GS = Guest ⨝ Stay
-- 2. Rename to create copies for previous and next stays
Prev = ρ Prev GS
Next = ρ Next GS
-- 3. Theta join of previous and next stays by gid
-- Keep only chronologically ordered tuples
-- Since we use strict less than conditions, single stays (equal start date) will be filtered out
Pairs = 
	Prev 
		⨝ Prev.gid = Next.gid ∧ Prev.start < Next.start 
	Next
-- 4. Filter out those pairs of stays such that next stay is longer than the previous stay
-- Also include filter for guest, as per the criteria
-- Project and rename the columns, as per the criteria
Answer = 
	π Prev.gid → id, Prev.gName → name, Prev.email → email Pairs 
		- 
	π Prev.gid → id, Prev.gName → name, Prev.email → email (
		σ Prev.nights > Next.nights ∧ Prev.gid = Next.gid Pairs
	)
-- 5. Show answer
Answer
/*
id	name	email
1	Ivan		a007@yandex.sql
*/

-- Solution 2: find required guest ids, then join them with Guest
-- 1. Rename to create copies for previous and next stays
Prev = ρ Prev Stay
Next = ρ Next Stay
-- 2. Theta join of previous and next stays by gid
-- Keep only chronologically ordered tuples
-- Since we use strict less than conditions, single stays (equal start date) will be filtered out
Pairs = 
	Prev 
		⨝ Prev.gid = Next.gid ∧ Prev.start < Next.start 
	Next
-- 3. Filter out those pairs of stays such that next stay is longer than the previous stay
Gids = 
	π Prev.gid Pairs 
		- 
	π Prev.gid (
		σ Prev.nights > Next.nights Pairs
	)
-- 4. Natural or cross join of Guest with Gids by gid
-- Project and rename the columns, as per the criteria
Answer = 
	π Guest.gid → id, gName → name, email → email (
		-- either natural join
		Guest ⨝ Gids
		-- or cross join with filter
		-- σ Guest.gid = Prev.gid (Guest ⨯ Gids)
	)
-- 5. Show answer
Answer
/*
id	name	email
1	Ivan		a007@yandex.sql
*/
